# dml0

=======
 mdadm
=======

sudo apt install mdadm
cat /proc/mdstat

umount /dev/md0
mdadm --stop /dev/md0
mdadm --remove /dev/md0
mdadm --zero-superblock /dev/sda-j
nano /etc/mdadm/mdadm.conf
  ARRAY /dev/md0 metadata=1.2 name=mdadmwrite:0 UUID=7261fb9c:976d0d97:30bc63ce:85e76e91
update-initramfs -u

sudo mdadm --create --verbose /dev/md0 --level=0 --raid-devices=4 /dev/sdc /dev/sdd /dev/sde /dev/sdf
sudo mkfs.ext4 -F /dev/md0
sudo mkdir -p /mnt/md0
sudo mount /dev/md0 /mnt/md0
echo '/dev/md0 /mnt/md0 ext4 defaults,nofail,discard 0 0' | sudo tee -a /etc/fstab

sudo mdadm --create --verbose /dev/md1 --level=1 --raid-devices=2 /dev/sdc /dev/sdd
sudo mkfs.ext4 -F /dev/md1
sudo mkdir -p /mnt/md1
sudo mount /dev/md1 /mnt/md1
echo '/dev/md1 /mnt/md1 ext4 defaults,nofail,discard 0 0' | sudo tee -a /etc/fstab

sudo mdadm --create --verbose /dev/md5 --level=5 --raid-devices=4 /dev/sdg /dev/sdi /dev/sdj /dev/sdk
sudo mkfs.ext4 -F /dev/md5
sudo mkdir -p /mnt/md5
sudo mount /dev/md5 /mnt/md5
echo '/dev/md5 /mnt/md5 ext4 defaults,nofail,discard 0 0' | sudo tee -a /etc/fstab

sudo mdadm --detail --scan | sudo tee -a /etc/mdadm/mdadm.conf
  ARRAY /dev/md1 metadata=1.2 name=dml:1 UUID=819cb825:1530074a:fd95a69a:27c873e2
  ARRAY /dev/md0 metadata=1.2 name=dml:0 UUID=195e2b06:6344cab6:42735de0:3b8b3dbc
  ARRAY /dev/md5 metadata=1.2 spares=1 name=dml:5 UUID=eb6397b7:820557b5:8a3c165c:b63e2c9d
sudo update-initramfs -u

df -h -x devtmpfs -x tmpfs

mdadm --stop /dev/md5
ARRAY /dev/md5 metadata=1.2 spares=1 name=dml:5 UUID=eb6397b7:820557b5:8a3c165c:b63e2c9d

======
 SWAP
======

sudo mkdir /mnt/md0/swap
cd /mnt/md0/swap
sudo fallocate -l 32g /mnt/md0/swap/32GiB.swap
sudo chmod 600 /mnt/md0/swap/32GiB.swap
sudo mkswap /mnt/md0/swap/32GiB.swap
sudo swapon /mnt/md0/swap/32GiB.swap
echo '/mnt/md0/swap/32GiB.swap swap swap defaults 0 0' | sudo tee -a /etc/fstab

lvremove /dev/mapper/dml--vg-swap_1
lvextend /dev/mapper/dml--vg-root /dev/sdk5
resize2fs /dev/mapper/dml--vg-root

=====
 KVM
=====

apt install qemu-kvm libvirt-bin ubuntu-vm-builder bridge-utils virtinst
logout
login  # membership of libvirtd becomes effective

virsh list --all
virsh destroy test0
virsh undefine test0

chgrp libvirtd /vol0/kvm
chmod g+w /vol0/kvm

nano /etc/network/interfaces 
  auto lo
  iface lo inet loopback

  auto br0
  iface br0 inet dhcp
  bridge_ports eth0
  bridge_stp off
  bridge_fd 0
  bridge_maxwait 0

virt-install -v \
  --name base0 \
  --vcpus 1 \
  --memory 512 \
  --disk path=/vol0/kvm/base0.img,bus=virtio,size=8 \
  --cdrom /vol0/files/iso/ubuntu-16.04.3-server-amd64.iso \
  --network bridge=br0,model=virtio \
  --graphics vnc,listen=0.0.0.0 \
  --noautoconsole

  --network network=default,model=virtio \
  
virt-clone \
  --original base0 \
  --name trans0 \
  --file /vol0/kvm/trans0.img

virsh start trans0
ssh trans0
nano /etc/hostname
  trans0
nano /etc/hosts
  127.0.1.1   trans0
reboot

qemu-img create -f raw /vol0/kvm/trans0_data0.img 100G
chmod 600 trans0_data0.img
chown libvirt-qemu:kvm trans0_data0.img
virsh attach-disk trans0 /vol0/kvm/trans0_data0.img vdb --live --persistent

ssh trans0
fdisk /dev/vdb
mkfs.ext4 /dev/vdb1
mkdir /mnt/data0
mount /dev/vdb1 /mnt/data0
nano /etc/fstab
  /dev/vdb1   /mnt/data0   ext4   defaults   0 0


virt-install -v \
  --name udesk0 \
  --vcpus 2 \
  --memory 2048 \
  --disk path=/vol0/kvm/udesk0.img,bus=virtio,size=20 \
  --cdrom /vol0/files/iso/ubuntu-16.04.3-desktop-amd64.iso \
  --network bridge=br0,model=virtio \
  --graphics vnc,listen=0.0.0.0 \
  --noautoconsole
  

=========
 ansible
=========

apt install software-properties-common
apt-add-repository ppa:ansible/ansible
apt update
apt install ansible

Key
  cd ~/.ssh
  ssh-keygen
  chmod 400 id_*

Local
  sudo visudo
    dml ALL=(ALL) NOPASSWD: ALL
  apt install python2.7
  ln -s /usr/bin/python2.7 /usr/bin/python

Remote
  ssh-copy-id user@host

ssh-agent bash
ssh-add ~/.ssh/id_...


=====
 ZFS
=====

https://wiki.ubuntu.com/ZFS
https://wiki.ubuntu.com/Kernel/Reference/ZFS
https://pthree.org/2012/04/17/install-zfs-on-debian-gnulinux/

apt install zfsutils-linux
zpool create -f vol0 /dev/sda /dev/sdc /dev/sdd /dev/sde
zpool create -f vol0 /dev/disk/by-id/ata-SAMSUNG_SSD_SM841N_mSATA_128GB_S1JXNYAF610402 /dev/disk/by-id/ata-SAMSUNG_SSD_SM841N_mSATA_128GB_S1JXNYAF404581 /dev/disk/by-id/ata-SAMSUNG_SSD_SM841_mSATA_128GB_S130NYADC33693 /dev/disk/by-id/ata-SAMSUNG_SSD_SM841N_mSATA_128GB_S1JXNYAF610365
zpool list
zpool status

zfs create vol0/test

zfs set mountpoint=/mnt/vol0 vol0

zpool import vol0

zfs get compression vol0
zfs get compressratio

zpool iostat vol0 

zpool create -f vol0 mirror /dev/disk/by-id/ata-ST500DM002-1BD142_W3T4J4HP /dev/disk/by-id/ata-ST500DM002-1BD142_Z6E39FZS


zpool create -f vol0 raidz1 /dev/disk/by-id/ata-ST9320423AS_5VJ2FXYL /dev/disk/by-id/ata-ST320LT007-9ZV142_W0Q3202Z /dev/disk/by-id/ata-WDC_WD3200BEKT-75PVMT0_WD-WX11A8151267
zpool add -f vol0 cache /dev/disk/by-id/ata-KINGSTON_SVP200S37A120G_50026B722A03F3FE
zfs set compression=lz4 vol0

zpool create -f vol0 raidz1 /dev/disk/by-id/ata-ST9500423AS_6WR0RV3D /dev/disk/by-id/ata-ST9500423AS_6WR16K2G /dev/disk/by-id/ata-WDC_WD5000BPKX-75HPJT0_WD-WXH1E93ETVX3
zpool add -f vol0 cache /dev/disk/by-id/ata-Radeon_R7_A22MD061450000104
zfs set compression=lz4 vol0


=======
 SMART
=======

https://help.ubuntu.com/community/Smartmontools

apt install smartmontools --no-install-recommends

wipefs -a /dev/sdb

smartctl -i /dev/sda      # info
smartctl -s on /dev/sda   # enable smart
smartctl -c /dev/sda      # estimate time to complete test

smartctl -l selftest /dev/sda   # test statistics
smartctl -a -d ata /dev/sda     # detailed smart info

smartctl -t <short|long|conveyance|select> /dev/sda  # test background mode

smartctl -t short -C /dev/sda   # test foreground mode


======
 PERF
======

apt install sysstat

iostat
iostat -x
iostat -c
iostat -d
iostat -dx
iostat -k
iostat -m
iostat -k 2 3

hdparm -t /dev/md0
   /dev/md0:
    Timing buffered disk reads: 2828 MB in  3.00 seconds = 942.17 MB/sec
hdparm -t /dev/md1
   /dev/md1:
    Timing buffered disk reads: 530 MB in  3.00 seconds = 176.62 MB/sec
hdparm -t /dev/md5
   /dev/md5:
    Timing buffered disk reads: 178 MB in  3.00 seconds =  59.26 MB/sec
hdparm -t --direct /dev/md0
   /dev/md0:
    Timing O_DIRECT disk reads: 2492 MB in  3.00 seconds = 830.42 MB/sec
hdparm -t --direct /dev/md1
   /dev/md1:
    Timing O_DIRECT disk reads: 538 MB in  3.00 seconds = 179.21 MB/sec
hdparm -t --direct /dev/md5
   /dev/md5:
    Timing O_DIRECT disk reads: 184 MB in  3.02 seconds =  60.90 MB/sec

hdparm -I /dev/sda-j
hdparm -a /dev/sda-j
   /dev/sda:
    readahead     = 256 (on)
hdparm -c /dev/sda

hdparm -c /dev/sda
   /dev/sda:
    IO_support    =  1 (32-bit)

hdparm -W /dev/sda
   /dev/sda:
    write-caching =  1 (on)

apt install iotop


=====
 FIO
=====

https://docs.microsoft.com/en-us/azure/storage/storage-premium-storage-performance
apt install fio
github.com/dmlesc/diks-perf


=========
 NETWORK
=========

ifconfig -a |grep Eth
ip link

nano /etc/network/interfaces
  auto enp3s0
  iface enp3s0 inet static
  address 10.0.0.10
  netmask 255.255.255.0

  gateway 192.168.3.1
  dns-search example.com
  dns-nameservers 192.168.3.45 192.168.8.10

  
=====
 SMB
=====

useradd -MUr files
passwd files
smbpasswd -a files

chown -R files:files /path/to/share

nano /etc/samba/smb.conf
  [backup]
    path = /mnt/backup
    valid users = files
    browsable = no
    guest ok = no
    writable = yes
    create mask = 0644

====
 PI
====

adduser dml
visudo
  dml   ALL = NOPASSWD: ALL
mkdir -p /mnt/downloads
nano /etc/hosts
  192.168.2.48    trans0
nano /etc/fstab
  //trans0/downloads /mnt/downloads cifs uid=pi,gid=pi,credentials=/home/pi/.creds,iocharset=utf8,sec=ntlm 0 0
nano /home/pi/.creds
  username=
  password=
chmod 600 /home/pi/.creds

